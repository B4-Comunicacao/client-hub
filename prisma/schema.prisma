generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  isAdmin       Boolean   @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Client {
  id             String   @id @default(cuid())
  name           String?
  email          String?
  phone          String?
  address        String?
  district       String?
  city           String?
  zipCode        String?
  referencePoint String?
  fantasyName    String?
  corporateName  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  registerNumber Int      @unique @default(autoincrement())

  orders Orders[]
}

model Orders {
  id             String   @id @default(cuid())
  client         Client   @relation(fields: [clientId], references: [id])
  clientId       String
  discount       Decimal? @db.Decimal(10, 2)
  totalValue     Decimal? @db.Decimal(10, 2)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  registerNumber Int      @unique @default(autoincrement())

  products Product[] @relation("OrderProducts")
}

model Product {
  id        String   @id @default(cuid())
  name      String?
  price     Decimal? @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Orders[] @relation("OrderProducts")
}
